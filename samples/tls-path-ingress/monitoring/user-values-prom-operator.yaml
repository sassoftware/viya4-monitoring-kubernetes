prometheus:
  # Disable default configuration of NodePort
  service:
    type: ClusterIP
    nodePort: null
  # Define host-based ingress
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    enabled: true
    tls:
    - hosts:
      - host.cluster.example.com
      secretName: prometheus-ingress-tls-secret
    hosts:
    - host.cluster.example.com
    path: /prometheus
  prometheusSpec:
    routePrefix: /prometheus
    externalUrl: https://host.cluster.example.com/prometheus

alertmanager:
  # Disable default configuration of NodePort
  service:
    type: ClusterIP
    nodePort: null
  # Define host-based ingress
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
    enabled: true
    tls:
    - hosts:
      - host.cluster.example.com
      secretName: alertmanager-ingress-tls-secret
    hosts:
    - host.cluster.example.com
    path: /alertmanager
  alertmanagerSpec:
    routePrefix: /alertmanager
    externalUrl: https://host.cluster.example.com/alertmanager

grafana:
  # Disable default configuration of NodePort
  service:
    type: ClusterIP
    nodePort: null
  # Define host-based ingress
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    enabled: true
    tls:
    - hosts:
      - host.cluster.example.com
      secretName: grafana-ingress-tls-secret
    hosts:
    - host.cluster.example.com
    path: /grafana
  "grafana.ini":
    server:
      domain: host.cluster.example.com
      root_url: https://host.cluster.example.com/grafana
      serve_from_sub_path: true
