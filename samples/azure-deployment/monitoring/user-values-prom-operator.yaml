# Place overrides for the Prometheus Operator Helm Chart Here

# Prometheus Operator Helm Chart
# https://https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack
#
# CRDs
# https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md
#
# Default Values
# https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml

# Sample ingress configuration
# NOTE: Edit hostnames and ingress port

# This example shows path-based ingress using HTTPS. Refer to the [ingress samples](/samples/ingress) for other options.
# The relevant AKS-specific settings for this sample are just the 'storageClassName:'
# sections below referencing the custom azuredisk-v4m storage class.

prometheus:
  service:
    type: ClusterIP
    nodePort: null
  ingress:
    enabled: false
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    tls:
    - hosts:
      - host.cluster.example.com
      secretName: prometheus-ingress-tls-secret
    hosts:
    - host.cluster.example.com
    path: /prometheus
    pathType: Prefix
  prometheusSpec:
    routePrefix: /prometheus
    externalUrl: https://host.cluster.example.com/prometheus
    storageSpec:
      volumeClaimTemplate:
        spec:
         storageClassName: azuredisk-v4m

alertmanager:
  # Disable default configuration of NodePort
  service:
    type: ClusterIP
    nodePort: null
  # Define path-based ingress
  ingress:
    # change the following value to 'true'
    # to make Alertmanager accessible via ingress
    enabled: false
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    tls:
    - hosts:
      - host.cluster.example.com
      secretName: alertmanager-ingress-tls-secret
    hosts:
    - host.cluster.example.com
    path: /alertmanager
    pathType: Prefix
  alertmanagerSpec:
    routePrefix: /alertmanager
    externalUrl: https://host.cluster.example.com/alertmanager
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: azuredisk-v4m

grafana:
  # Disable default configuration of NodePort
  service:
    type: ClusterIP
    nodePort: null
  ingress:
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    enabled: true
    tls:
    - hosts:
      - host.cluster.example.com
      secretName: grafana-ingress-tls-secret
    hosts:
    - host.cluster.example.com
    path: /grafana
    pathType: Prefix
  "grafana.ini":
    server:
      domain: host.cluster.example.com
      root_url: https://host.cluster.example.com/grafana
      serve_from_sub_path: true
  testFramework:
    enabled: false
  persistence:
    storageClassName: azuredisk-v4m
