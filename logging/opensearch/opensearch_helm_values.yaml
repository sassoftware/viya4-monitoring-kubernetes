image:
  tag: 1.3.5

config: 
  opensearch.yml: |
    ######## ODFE ==> OpenSearch Security Configuration - START ########
    # Based on V4M existing es_helm_values_open.yaml security config
    #
    # Changes: global change opendistro_security.==>plugins.security.
    #          added opensearch.yaml line and indented previous content

    plugins.security.ssl.transport.pemcert_filepath: elk-transport-crt.pem
    plugins.security.ssl.transport.pemkey_filepath: elk-transport-key.pem
    plugins.security.ssl.transport.pemtrustedcas_filepath: elk-transport-root-ca.pem
    plugins.security.ssl.transport.enforce_hostname_verification: false
    plugins.security.ssl.http.enabled: true
    plugins.security.ssl.http.pemcert_filepath: elk-rest-crt.pem
    plugins.security.ssl.http.pemkey_filepath: elk-rest-key.pem
    plugins.security.ssl.http.pemtrustedcas_filepath: elk-rest-root-ca.pem
    plugins.security.allow_unsafe_democertificates: false
    plugins.security.allow_default_init_securityindex: false
    plugins.security.authcz.admin_dn:
    - "${OPENSEARCH_ADMIN_DN}"
    plugins.security.nodes_dn:
    - "${OPENSEARCH_NODE_DN}"
    plugins.security.audit.type: internal_opensearch
    plugins.security.enable_snapshot_restore_privilege: true
    plugins.security.check_snapshot_restore_write_privileges: true
    plugins.security.restapi.roles_enabled: ["all_access", "security_rest_api_access"]
    cluster.routing.allocation.disk.threshold_enabled: false
    node.max_local_storage_nodes: 3
    ######## ODFE ==> OpenSearch Security Configuration - END ########

securityConfig:
  enabled: true
  path: "/usr/share/opensearch/plugins/opensearch-security/securityconfig"
  actionGroupsSecret: security-action-groups
  configSecret: security-config
  internalUsersSecret: security-internal-users
  rolesSecret: security-roles
  rolesMappingSecret: security-roles-mapping
  tenantsSecret: security-tenants

extraEnvs:
 - name: DISABLE_INSTALL_DEMO_CONFIG
   value: "true"
 - name: ES_ADMIN_PASSWD
   valueFrom:
     secretKeyRef:
       name: internal-user-admin
       key: password
 # Need ES_KIBANASESRVER_PASSWD available when ES starts
 # b/c it's referenced in securityconfig/internal_users.yaml
 - name: ES_KIBANASERVER_PASSWD
   valueFrom:
     secretKeyRef:
       name: internal-user-kibanaserver
       key: password
 - name: ES_LOGCOLLECTOR_PASSWD
   valueFrom:
     secretKeyRef:
       name: internal-user-logcollector
       key: password
 - name: ES_METRICGETTER_PASSWD
   valueFrom:
     secretKeyRef:
       name: internal-user-metricgetter
       key: password
 - name: OPENSEARCH_NODE_DN
   valueFrom:
     secretKeyRef:
       name: opensearch-cert-subjects
       key: node_dn
 - name: OPENSEARCH_ADMIN_DN
   valueFrom:
     secretKeyRef:
       name: opensearch-cert-subjects
       key: admin_dn


extraVolumes:
- name: v4m-security-script
  configMap:
    name: run-securityadmin.sh
    defaultMode: 0755
- name: transport-certs
  secret:
    secretName: es-transport-tls-secret
- name: rest-certs
  secret:
    secretName: es-rest-tls-secret
- name: admin-certs
  secret:
    secretName: es-admin-tls-secret

extraVolumeMounts: 
- mountPath: "/usr/share/opensearch/config/run_securityadmin.sh"
  name: v4m-security-script
  readOnly: true
  subPath: run_securityadmin.sh

- name: transport-certs
  mountPath: "/usr/share/opensearch/config/elk-transport-crt.pem"
  subPath: tls.crt
- name: transport-certs
  mountPath: "/usr/share/opensearch/config/elk-transport-key.pem"
  subPath: tls.key
- name: transport-certs
  mountPath: "/usr/share/opensearch/config/elk-transport-root-ca.pem"
  subPath: ca.crt
- name: rest-certs
  mountPath: "/usr/share/opensearch/config/elk-rest-crt.pem"
  subPath: tls.crt
- name: rest-certs
  mountPath: "/usr/share/opensearch/config/elk-rest-key.pem"
  subPath: tls.key
- name: rest-certs
  mountPath: "/usr/share/opensearch/config/elk-rest-root-ca.pem"
  subPath: ca.crt
- name: admin-certs
  mountPath: "/usr/share/opensearch/config/admin-crt.pem"
  subPath: tls.crt
- name: admin-certs
  mountPath: "/usr/share/opensearch/config/admin-key.pem"
  subPath: tls.key
- name: admin-certs
  mountPath: "/usr/share/opensearch/config/admin-root-ca.pem"
  subPath: ca.crt


#09FEB22 TBD: affinity.podAntiAffinity ==> nodeAffinity?
roles:
  - master
  - ingest
  - data

replicas: 3

opensearchJavaOpts: "-Xms4096m -Xmx4096m"

podAnnotations: 
  fluentbit.io/parser: elasticsearch

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - v4m-search
          - key: role
            operator: In
            values:
            - master
        topologyKey: kubernetes.io/hostname
      weight: 100
persistence:
  enabled: true
  #storageClass: alt-storage
  size: 30Gi

sysctl:
  enabled: false

extraInitContainers:
- name: init-sysctl
  image: busybox:latest
  command:
  - sysctl
  - '-w'
  - vm.max_map_count=262144
  securityContext:
    privileged: true
    runAsUser: 0
