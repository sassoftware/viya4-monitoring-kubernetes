elasticsearch:
  imageTag: 1.7.0

  config: 
    ######## OpenDistro for Elasticsearch Security Configuration - START ########
    # Based on elasticsearch.yaml file found on pod after deploying with demo security config
    #
    # Changes: renamed various .pem files to use elk- prefix (expected/required by Helm templates)
    #          set:        opendistro_security.authcz.admin_dn
    #          added/set:  opendistro_security.nodes_dn
    #          removed:    various items unrelated to TLS
    #          (re)set:    allow_unsafe_democertificates, allow_default_init_securityindex (both now: false)

    opendistro_security.ssl.transport.pemcert_filepath: elk-transport-crt.pem
    opendistro_security.ssl.transport.pemkey_filepath: elk-transport-key.pem
    opendistro_security.ssl.transport.pemtrustedcas_filepath: elk-transport-root-ca.pem
    opendistro_security.ssl.transport.enforce_hostname_verification: false
    opendistro_security.ssl.http.enabled: true
    opendistro_security.ssl.http.pemcert_filepath: elk-transport-crt.pem
    opendistro_security.ssl.http.pemkey_filepath: elk-transport-key.pem
    opendistro_security.ssl.http.pemtrustedcas_filepath: elk-transport-root-ca.pem
    opendistro_security.allow_unsafe_democertificates: false
    opendistro_security.allow_default_init_securityindex: false
    opendistro_security.authcz.admin_dn:
      - "CN=es-admin,O=cert-manager"
    opendistro_security.nodes_dn:
       - "CN=es-transport,O=cert-manager"

    opendistro_security.audit.type: internal_elasticsearch
    opendistro_security.enable_snapshot_restore_privilege: true
    opendistro_security.check_snapshot_restore_write_privileges: true
    opendistro_security.restapi.roles_enabled: ["all_access", "security_rest_api_access"]
    cluster.routing.allocation.disk.threshold_enabled: false
    node.max_local_storage_nodes: 3
    ######## End OpenDistro for Elasticsearch Security Configuration ########

  ssl:
    transport:
       # TLS is mandatory for transport layer(cannot be disabled)
       existingCertSecret: es-transport-tls-secret
       existingCertSecretCertSubPath: tls.crt
       existingCertSecretKeySubPath: tls.key
       existingCertSecretRootCASubPath: ca.crt
    rest:
       enabled: true
       existingCertSecret: es-rest-tls-secret
       existingCertSecretCertSubPath: tls.crt
       existingCertSecretKeySubPath: tls.key
       existingCertSecretRootCASubPath: ca.crt
    admin:
       enabled: true
       existingCertSecret: es-admin-tls-secret
       existingCertSecretCertSubPath: tls.crt
       existingCertSecretKeySubPath: tls.key
       existingCertSecretRootCASubPath: ca.crt

  securityConfig:
    enabled: true
    path: "/usr/share/elasticsearch/plugins/opendistro_security/securityconfig"
    actionGroupsSecret: security-action-groups
    configSecret: security-config
    internalUsersSecret: security-internal-users
    rolesSecret: security-roles
    rolesMappingSecret: security-roles-mapping

  extraEnvs:
  - name: ES_ADMIN_PASSWD
    valueFrom:
      secretKeyRef:
        name: internal-user-admin
        key: password
  - name: ES_KIBANASERVER_PASSWD
    valueFrom:
      secretKeyRef:
        name: internal-user-kibanaserver
        key: password
  - name: ES_LOGCOLLECTOR_PASSWD
    valueFrom:
      secretKeyRef:
        name: internal-user-logcollector
        key: password
  - name: ES_METRICGETTER_PASSWD
    valueFrom:
      secretKeyRef:
        name: internal-user-metricgetter
        key: password

  extraVolumes:
  - name: v4m-security-script
    configMap:
      name: run-securityadmin.sh
      defaultMode: 0755
  extraVolumeMounts: 
  - mountPath: "/usr/share/elasticsearch/config/run_securityadmin.sh"
    name: v4m-security-script
    readOnly: true
    subPath: run_securityadmin.sh

  master:
    enabled: true
    podAnnotations: 
      fluentbit.io/parser: elasticsearch
    replicas: 3
    persistence:
      enabled: true
      #storageClass: alt-storage
      size: 8Gi
    tolerations:
    - key: workload.sas.com/class
      value: stateful
      effect: NoSchedule

  data:
    enabled: true
    podAnnotations:
      fluentbit.io/parser: elasticsearch
    replicas: 3
    persistence:
      enabled: true
      #storageClass: alt-storage
      size: 30Gi
    tolerations:
    - key: workload.sas.com/class
      value: stateful
      effect: NoSchedule

  client:
    enabled: true
    podAnnotations:
      fluentbit.io/parser: elasticsearch
    replicas: 2

kibana:
  imageTag: 1.7.0

  extraEnvs:
  - name: ELASTICSEARCH_USERNAME
    valueFrom:
      secretKeyRef:
        name: internal-user-kibanaserver
        key: username
  - name: ELASTICSEARCH_PASSWORD
    valueFrom:
      secretKeyRef:
        name: internal-user-kibanaserver
        key: password

  service:
    type: NodePort
    # nodePort option below is not currently supported
    # by Helm chart; inc. for clarity and future enhancements
    nodePort: 31033

  config:
    # Based on kibana.yaml found on deployment with ODFE demo security config
    server.name: kibana
    server.host: "0"

    elasticsearch.hosts: https://v4m-es-client-service:9200
    elasticsearch.ssl.verificationMode: none
    elasticsearch.username: ${ELASTICSEARCH_USERNAME}
    elasticsearch.password: ${ELASTICSEARCH_PASSWORD}

    opendistro_security.multitenancy.enabled: false
    # opendistro_security.multitenancy.tenants.preferred: ["Global","Private"]
    elasticsearch.requestHeadersWhitelist: ["securitytenant","Authorization"]

    opendistro_security.readonly_mode.roles: ["kibana_read_only"]

    newsfeed.enabled: false
    telemetry.optIn: false
    telemetry.enabled: false
